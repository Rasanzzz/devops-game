{"version":3,"sources":["script.js"],"names":["stages","document","querySelectorAll","dropzones","result","getElementById","dragStart","e","dataTransfer","setData","target","id","setTimeout","classList","add","dragEnd","remove","dragOver","preventDefault","dragEnter","dragLeave","dragDrop","getData","draggable","children","length","appendChild","checkPipeline","stagesOrder","isCorrect","forEach","zone","index","style","border","textContent","stage","addEventListener"],"mappings":";AAAA,IAAMA,EAASC,SAASC,iBAAiB,UACnCC,EAAYF,SAASC,iBAAiB,aACtCE,EAASH,SAASI,eAAe,UAcvC,SAASC,EAAUC,GACfA,EAAEC,aAAaC,QAAQ,aAAcF,EAAEG,OAAOC,IAC9CC,WAAW,WACPL,EAAEG,OAAOG,UAAUC,IAAI,SACxB,GAGP,SAASC,EAAQR,GACbA,EAAEG,OAAOG,UAAUG,OAAO,QAG9B,SAASC,EAASV,GACdA,EAAEW,iBAGN,SAASC,EAAUZ,GACfA,EAAEW,iBACFX,EAAEG,OAAOG,UAAUC,IAAI,WAG3B,SAASM,EAAUb,GACfA,EAAEG,OAAOG,UAAUG,OAAO,WAG9B,SAASK,EAASd,GACdA,EAAEG,OAAOG,UAAUG,OAAO,WAC1B,IAAML,EAAKJ,EAAEC,aAAac,QAAQ,cAC5BC,EAAYtB,SAASI,eAAeM,GACT,IAA7BJ,EAAEG,OAAOc,SAASC,QAClBlB,EAAEG,OAAOgB,YAAYH,GAI7B,SAASI,IACL,IAAMC,EAAc,CAAC,OAAQ,OAAQ,QAAS,OAAQ,SAAU,UAAW,WACvEC,GAAY,EAEhB1B,EAAU2B,QAAQ,SAACC,EAAMC,GACjBD,EAAKP,SAAS,IAAMO,EAAKP,SAAS,GAAGb,KAAOiB,EAAYI,GACxDD,EAAKE,MAAMC,OAAS,mBAEpBH,EAAKE,MAAMC,OAAS,gBACpBL,GAAY,KAIpBzB,EAAO+B,YAAcN,EAAY,oBAAsB,sBA1D3D7B,EAAO8B,QAAQ,SAAAM,GACXA,EAAMC,iBAAiB,YAAa/B,GACpC8B,EAAMC,iBAAiB,UAAWtB,KAGtCZ,EAAU2B,QAAQ,SAAAC,GACdA,EAAKM,iBAAiB,WAAYpB,GAClCc,EAAKM,iBAAiB,YAAalB,GACnCY,EAAKM,iBAAiB,YAAajB,GACnCW,EAAKM,iBAAiB,OAAQhB","file":"script.755d8690.js","sourceRoot":"..","sourcesContent":["const stages = document.querySelectorAll('.stage');\nconst dropzones = document.querySelectorAll('.dropzone');\nconst result = document.getElementById('result');\n\nstages.forEach(stage => {\n    stage.addEventListener('dragstart', dragStart);\n    stage.addEventListener('dragend', dragEnd);\n});\n\ndropzones.forEach(zone => {\n    zone.addEventListener('dragover', dragOver);\n    zone.addEventListener('dragenter', dragEnter);\n    zone.addEventListener('dragleave', dragLeave);\n    zone.addEventListener('drop', dragDrop);\n});\n\nfunction dragStart(e) {\n    e.dataTransfer.setData('text/plain', e.target.id);\n    setTimeout(() => {\n        e.target.classList.add('hide');\n    }, 0);\n}\n\nfunction dragEnd(e) {\n    e.target.classList.remove('hide');\n}\n\nfunction dragOver(e) {\n    e.preventDefault();\n}\n\nfunction dragEnter(e) {\n    e.preventDefault();\n    e.target.classList.add('hovered');\n}\n\nfunction dragLeave(e) {\n    e.target.classList.remove('hovered');\n}\n\nfunction dragDrop(e) {\n    e.target.classList.remove('hovered');\n    const id = e.dataTransfer.getData('text/plain');\n    const draggable = document.getElementById(id);\n    if (e.target.children.length === 0) {\n        e.target.appendChild(draggable);\n    }\n}\n\nfunction checkPipeline() {\n    const stagesOrder = ['plan', 'code', 'build', 'test', 'deploy', 'monitor', 'operate'];\n    let isCorrect = true;\n\n    dropzones.forEach((zone, index) => {\n        if (zone.children[0] && zone.children[0].id === stagesOrder[index]) {\n            zone.style.border = '2px solid green';\n        } else {\n            zone.style.border = '2px solid red';\n            isCorrect = false;\n        }\n    });\n\n    result.textContent = isCorrect ? 'Correct Pipeline!' : 'Incorrect Pipeline!';\n}\n"]}